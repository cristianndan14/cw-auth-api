# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResetPasswordData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code_email: str=None, password: str=None, token: str=None):  # noqa: E501
        """ResetPasswordData - a model defined in Swagger

        :param code_email: The code_email of this ResetPasswordData.  # noqa: E501
        :type code_email: str
        :param password: The password of this ResetPasswordData.  # noqa: E501
        :type password: str
        :param token: The token of this ResetPasswordData.  # noqa: E501
        :type token: str
        """
        self.swagger_types = {
            'code_email': str,
            'password': str,
            'token': str
        }

        self.attribute_map = {
            'code_email': 'code_email',
            'password': 'password',
            'token': 'token'
        }
        self._code_email = code_email
        self._password = password
        self._token = token

    @classmethod
    def from_dict(cls, dikt) -> 'ResetPasswordData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResetPasswordData of this ResetPasswordData.  # noqa: E501
        :rtype: ResetPasswordData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_email(self) -> str:
        """Gets the code_email of this ResetPasswordData.


        :return: The code_email of this ResetPasswordData.
        :rtype: str
        """
        return self._code_email

    @code_email.setter
    def code_email(self, code_email: str):
        """Sets the code_email of this ResetPasswordData.


        :param code_email: The code_email of this ResetPasswordData.
        :type code_email: str
        """

        self._code_email = code_email

    @property
    def password(self) -> str:
        """Gets the password of this ResetPasswordData.


        :return: The password of this ResetPasswordData.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this ResetPasswordData.


        :param password: The password of this ResetPasswordData.
        :type password: str
        """

        self._password = password

    @property
    def token(self) -> str:
        """Gets the token of this ResetPasswordData.


        :return: The token of this ResetPasswordData.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this ResetPasswordData.


        :param token: The token of this ResetPasswordData.
        :type token: str
        """

        self._token = token
