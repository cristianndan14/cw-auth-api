# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SigninData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code_email: str=None, profile: str=None, role_id: int=None):  # noqa: E501
        """SigninData - a model defined in Swagger

        :param code_email: The code_email of this SigninData.  # noqa: E501
        :type code_email: str
        :param profile: The profile of this SigninData.  # noqa: E501
        :type profile: str
        :param role_id: The role_id of this SigninData.  # noqa: E501
        :type role_id: int
        """
        self.swagger_types = {
            'code_email': str,
            'profile': str,
            'role_id': int
        }

        self.attribute_map = {
            'code_email': 'code_email',
            'profile': 'profile',
            'role_id': 'role_id'
        }
        self._code_email = code_email
        self._profile = profile
        self._role_id = role_id

    @classmethod
    def from_dict(cls, dikt) -> 'SigninData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SigninData of this SigninData.  # noqa: E501
        :rtype: SigninData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_email(self) -> str:
        """Gets the code_email of this SigninData.


        :return: The code_email of this SigninData.
        :rtype: str
        """
        return self._code_email

    @code_email.setter
    def code_email(self, code_email: str):
        """Sets the code_email of this SigninData.


        :param code_email: The code_email of this SigninData.
        :type code_email: str
        """

        self._code_email = code_email

    @property
    def profile(self) -> str:
        """Gets the profile of this SigninData.


        :return: The profile of this SigninData.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile: str):
        """Sets the profile of this SigninData.


        :param profile: The profile of this SigninData.
        :type profile: str
        """

        self._profile = profile

    @property
    def role_id(self) -> int:
        """Gets the role_id of this SigninData.


        :return: The role_id of this SigninData.
        :rtype: int
        """
        return self._role_id

    @role_id.setter
    def role_id(self, role_id: int):
        """Sets the role_id of this SigninData.


        :param role_id: The role_id of this SigninData.
        :type role_id: int
        """

        self._role_id = role_id
