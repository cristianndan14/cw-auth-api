# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SigninSignupUserData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code_email: str=None, name: str=None, password: str=None):  # noqa: E501
        """SigninSignupUserData - a model defined in Swagger

        :param code_email: The code_email of this SigninSignupUserData.  # noqa: E501
        :type code_email: str
        :param name: The name of this SigninSignupUserData.  # noqa: E501
        :type name: str
        :param password: The password of this SigninSignupUserData.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'code_email': str,
            'name': str,
            'password': str
        }

        self.attribute_map = {
            'code_email': 'code_email',
            'name': 'name',
            'password': 'password'
        }
        self._code_email = code_email
        self._name = name
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'SigninSignupUserData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SigninSignupUserData of this SigninSignupUserData.  # noqa: E501
        :rtype: SigninSignupUserData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_email(self) -> str:
        """Gets the code_email of this SigninSignupUserData.


        :return: The code_email of this SigninSignupUserData.
        :rtype: str
        """
        return self._code_email

    @code_email.setter
    def code_email(self, code_email: str):
        """Sets the code_email of this SigninSignupUserData.


        :param code_email: The code_email of this SigninSignupUserData.
        :type code_email: str
        """

        self._code_email = code_email

    @property
    def name(self) -> str:
        """Gets the name of this SigninSignupUserData.


        :return: The name of this SigninSignupUserData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SigninSignupUserData.


        :param name: The name of this SigninSignupUserData.
        :type name: str
        """

        self._name = name

    @property
    def password(self) -> str:
        """Gets the password of this SigninSignupUserData.


        :return: The password of this SigninSignupUserData.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this SigninSignupUserData.


        :param password: The password of this SigninSignupUserData.
        :type password: str
        """

        self._password = password
