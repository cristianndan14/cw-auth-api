# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CheckUserData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code_email: str=None, profile: str=None, status: str=None):  # noqa: E501
        """CheckUserData - a model defined in Swagger

        :param code_email: The code_email of this CheckUserData.  # noqa: E501
        :type code_email: str
        :param profile: The profile of this CheckUserData.  # noqa: E501
        :type profile: str
        :param status: The status of this CheckUserData.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'code_email': str,
            'profile': str,
            'status': str
        }

        self.attribute_map = {
            'code_email': 'code_email',
            'profile': 'profile',
            'status': 'status'
        }
        self._code_email = code_email
        self._profile = profile
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'CheckUserData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CheckUserData of this CheckUserData.  # noqa: E501
        :rtype: CheckUserData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_email(self) -> str:
        """Gets the code_email of this CheckUserData.


        :return: The code_email of this CheckUserData.
        :rtype: str
        """
        return self._code_email

    @code_email.setter
    def code_email(self, code_email: str):
        """Sets the code_email of this CheckUserData.


        :param code_email: The code_email of this CheckUserData.
        :type code_email: str
        """

        self._code_email = code_email

    @property
    def profile(self) -> str:
        """Gets the profile of this CheckUserData.


        :return: The profile of this CheckUserData.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile: str):
        """Sets the profile of this CheckUserData.


        :param profile: The profile of this CheckUserData.
        :type profile: str
        """

        self._profile = profile

    @property
    def status(self) -> str:
        """Gets the status of this CheckUserData.


        :return: The status of this CheckUserData.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this CheckUserData.


        :param status: The status of this CheckUserData.
        :type status: str
        """

        self._status = status
